/**
 * This class is generated by jOOQ
 */
package test.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import test.generated.Hsr2015;
import test.generated.Keys;
import test.generated.tables.records.AccountRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Account extends TableImpl<AccountRecord> {

	private static final long serialVersionUID = 1210327306;

	/**
	 * The reference instance of <code>hsr2015.Account</code>
	 */
	public static final Account ACCOUNT = new Account();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AccountRecord> getRecordType() {
		return AccountRecord.class;
	}

	/**
	 * The column <code>hsr2015.Account.id</code>.
	 */
	public final TableField<AccountRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>hsr2015.Account.accountNumber</code>.
	 */
	public final TableField<AccountRecord, String> ACCOUNTNUMBER = createField("accountNumber", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>hsr2015.Account.amount</code>.
	 */
	public final TableField<AccountRecord, Double> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

	/**
	 * The column <code>hsr2015.Account.accountOwner_id</code>.
	 */
	public final TableField<AccountRecord, Long> ACCOUNTOWNER_ID = createField("accountOwner_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * Create a <code>hsr2015.Account</code> table reference
	 */
	public Account() {
		this("Account", null);
	}

	/**
	 * Create an aliased <code>hsr2015.Account</code> table reference
	 */
	public Account(String alias) {
		this(alias, ACCOUNT);
	}

	private Account(String alias, Table<AccountRecord> aliased) {
		this(alias, aliased, null);
	}

	private Account(String alias, Table<AccountRecord> aliased, Field<?>[] parameters) {
		super(alias, Hsr2015.HSR2015, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<AccountRecord, Long> getIdentity() {
		return Keys.IDENTITY_ACCOUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AccountRecord> getPrimaryKey() {
		return Keys.KEY_ACCOUNT_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AccountRecord>> getKeys() {
		return Arrays.<UniqueKey<AccountRecord>>asList(Keys.KEY_ACCOUNT_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<AccountRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<AccountRecord, ?>>asList(Keys.FK_5B1RMR0UT51MW6QYCCGETVWUJ);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Account as(String alias) {
		return new Account(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Account rename(String name) {
		return new Account(name, null);
	}
}
