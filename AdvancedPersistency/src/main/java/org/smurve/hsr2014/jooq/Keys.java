/**
 * This class is generated by jOOQ
 */
package org.smurve.hsr2014.jooq;


import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;
import org.smurve.hsr2014.jooq.tables.Account;
import org.smurve.hsr2014.jooq.tables.Author;
import org.smurve.hsr2014.jooq.tables.Book;
import org.smurve.hsr2014.jooq.tables.Testrecord;
import org.smurve.hsr2014.jooq.tables.records.AccountRecord;
import org.smurve.hsr2014.jooq.tables.records.AuthorRecord;
import org.smurve.hsr2014.jooq.tables.records.BookRecord;
import org.smurve.hsr2014.jooq.tables.records.TestrecordRecord;


/**
 * A class modelling foreign key relationships between tables of the <code>hsr2015</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final Identity<AccountRecord, Long> IDENTITY_ACCOUNT = Identities0.IDENTITY_ACCOUNT;
	public static final Identity<AuthorRecord, Long> IDENTITY_AUTHOR = Identities0.IDENTITY_AUTHOR;
	public static final Identity<BookRecord, Long> IDENTITY_BOOK = Identities0.IDENTITY_BOOK;
	public static final Identity<TestrecordRecord, Long> IDENTITY_TESTRECORD = Identities0.IDENTITY_TESTRECORD;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<AccountRecord> KEY_ACCOUNT_PRIMARY = UniqueKeys0.KEY_ACCOUNT_PRIMARY;
	public static final UniqueKey<AuthorRecord> KEY_AUTHOR_PRIMARY = UniqueKeys0.KEY_AUTHOR_PRIMARY;
	public static final UniqueKey<BookRecord> KEY_BOOK_PRIMARY = UniqueKeys0.KEY_BOOK_PRIMARY;
	public static final UniqueKey<TestrecordRecord> KEY_TESTRECORD_PRIMARY = UniqueKeys0.KEY_TESTRECORD_PRIMARY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final ForeignKey<AccountRecord, AuthorRecord> FK_5B1RMR0UT51MW6QYCCGETVWUJ = ForeignKeys0.FK_5B1RMR0UT51MW6QYCCGETVWUJ;
	public static final ForeignKey<BookRecord, AuthorRecord> FK_2KRFR0TKKUXIV7J794SGFV5J1 = ForeignKeys0.FK_2KRFR0TKKUXIV7J794SGFV5J1;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		public static Identity<AccountRecord, Long> IDENTITY_ACCOUNT = createIdentity(Account.ACCOUNT, Account.ACCOUNT.ID);
		public static Identity<AuthorRecord, Long> IDENTITY_AUTHOR = createIdentity(Author.AUTHOR, Author.AUTHOR.ID);
		public static Identity<BookRecord, Long> IDENTITY_BOOK = createIdentity(Book.BOOK, Book.BOOK.ID);
		public static Identity<TestrecordRecord, Long> IDENTITY_TESTRECORD = createIdentity(Testrecord.TESTRECORD, Testrecord.TESTRECORD.ID);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<AccountRecord> KEY_ACCOUNT_PRIMARY = createUniqueKey(Account.ACCOUNT, Account.ACCOUNT.ID);
		public static final UniqueKey<AuthorRecord> KEY_AUTHOR_PRIMARY = createUniqueKey(Author.AUTHOR, Author.AUTHOR.ID);
		public static final UniqueKey<BookRecord> KEY_BOOK_PRIMARY = createUniqueKey(Book.BOOK, Book.BOOK.ID);
		public static final UniqueKey<TestrecordRecord> KEY_TESTRECORD_PRIMARY = createUniqueKey(Testrecord.TESTRECORD, Testrecord.TESTRECORD.ID);
	}

	private static class ForeignKeys0 extends AbstractKeys {
		public static final ForeignKey<AccountRecord, AuthorRecord> FK_5B1RMR0UT51MW6QYCCGETVWUJ = createForeignKey(org.smurve.hsr2014.jooq.Keys.KEY_AUTHOR_PRIMARY, Account.ACCOUNT, Account.ACCOUNT.ACCOUNTOWNER_ID);
		public static final ForeignKey<BookRecord, AuthorRecord> FK_2KRFR0TKKUXIV7J794SGFV5J1 = createForeignKey(org.smurve.hsr2014.jooq.Keys.KEY_AUTHOR_PRIMARY, Book.BOOK, Book.BOOK.AUTHOR_ID);
	}
}
